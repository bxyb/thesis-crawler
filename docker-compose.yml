version: '3.8'

services:
  # Redis for Celery
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - thesis_net

  # PostgreSQL for production
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: thesis_crawler
      POSTGRES_USER: thesis
      POSTGRES_PASSWORD: thesis_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U thesis -d thesis_crawler"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - thesis_net

  # Flask web application
  web:
    build: .
    ports:
      - "5000:5000"
    environment:
      - DATABASE_URL=postgresql://thesis:thesis_password@postgres:5432/thesis_crawler
      - REDIS_URL=redis://redis:6379/0
      - FLASK_ENV=production
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - thesis_net
    restart: unless-stopped

  # Celery worker
  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile.celery
    environment:
      - DATABASE_URL=postgresql://thesis:thesis_password@postgres:5432/thesis_crawler
      - REDIS_URL=redis://redis:6379/0
      - C_FORCE_ROOT=1
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - thesis_net
    restart: unless-stopped

  # Celery beat scheduler
  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile.celery
    environment:
      - DATABASE_URL=postgresql://thesis:thesis_password@postgres:5432/thesis_crawler
      - REDIS_URL=redis://redis:6379/0
      - C_FORCE_ROOT=1
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    command: celery -A src.scheduler beat --loglevel=info
    networks:
      - thesis_net
    restart: unless-stopped

volumes:
  redis_data:
  postgres_data:

networks:
  thesis_net:
    driver: bridge